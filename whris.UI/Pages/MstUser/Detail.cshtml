@page
@model DetailModel

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@Html.AntiForgeryToken()
@{
    Layout = null;
}

@functions
{

}

<style>
    #MstUserForms {
        height: 60vh;
    }

    .form-group {
        margin-top: 5px;
    }
</style>

<form id="frmDetail" method="post" style="margin-top: 10px">
    <div class="row" style="margin-bottom: 5px; margin-top: 5px">
        <div class="col-md-6">
            <h5 class="title-color"><i class="fa fa-user"></i> User Detail</h5>
        </div>

        <div class="col-md-6" style="padding: 0px">
            <div class="float-end">
                <div class="hstack gap-3 float end">
                    <button class="btn btn-light cmd-buttons"
                            type="button"
                            onclick="CmdPreviousPage()">
                        <span class="btn-label">
                            <i class="fa fa-arrow-left"></i>
                        </span>
                    </button>

                    <button class="btn btn-light cmd-buttons"
                            type="button"
                            onclick="CmdNextPage()">
                        <span class="btn-label">
                            <i class="fa fa-arrow-right"></i>
                        </span>
                    </button>

                    <button class="btn btn-light cmd-buttons"
                            type="button"
                            onclick="CmdPreview()"
                            disabled>
                        <span class="btn-label">
                            <i class="fa fa-print"></i>
                        </span>
                        Print
                    </button>

                    <button class="btn btn-danger"
                            type="button"
                            onclick="CmdDeleteModal()">
                        <span class="btn-label">
                            <i class="fa fa-trash"></i>
                        </span>
                        Delete
                    </button>

                    <button id="btnSave"
                            class="btn btn-primary"
                            type="button"
                            onclick="CmdSave()">
                        <span class="btn-label">
                            <i class="fa fa-lock"></i>
                        </span>
                        Save
                    </button>

                    <button class="btn btn-light cmd-buttons"
                            type="button"
                            onclick="CmdBack()">
                        <span class="btn-label">
                            <i class="fa fa-arrow-left"></i>
                        </span>
                        Back
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="row" style="margin-bottom: 5px; margin-top: 5px">
        <div class="col-md-6">
            <div class="form-group row">
                <label class="col-md-2" style="padding-top: 5px; font-weight: bold;">Id: </label>
                <div class="col-md-10">
                    <kendo-textbox name="Id" placeholder="Id" value="@Model.UserDetail.Id" readonly="true" style="width: 100px; background-color: lightgray;">
                    </kendo-textbox>
                </div>

            </div>

            <div class="form-group row">
                <label class="col-md-2" style="padding-top: 5px; font-weight: bold;">Username: </label>
                <div class="col-md-10">
                    <kendo-textbox name="Username" placeholder="Username" value="@Model.UserDetail.UserName" style="width: 40%">
                    </kendo-textbox>
                </div>

            </div>

            <div class="form-group row">
                <label class="col-md-2" style="padding-top: 5px; font-weight: bold;">Full Name: </label>
                <div class="col-md-10">
                    <kendo-textbox name="FullName" placeholder="Fullname" value="@Model.UserDetail.FullName" style="width: 60%">
                    </kendo-textbox>
                </div>
            </div>

            <div class="form-group row">
                <label class="col-md-2" style="padding-top: 5px; font-weight: bold;">Password</label>
                <div class="col-md-10">
                    <input class="form-control" type="password" name="Password" placeholder="Fullname" value="@Model.UserDetail.Password" style="width: 40%" />
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group row">
                <label class="col-md-2" style="padding-top: 5px; font-weight: bold;">Email: </label>
                <div class="col-md-10">
                    <kendo-combobox name="ASPUserId" style="width: 50%"
                        placeholder="Email"
                        datatextfield="Email"
                        datavaluefield="Id"
                        value="@Model.UserDetail.ASPUserId"
                        min-length="3"
                        height="520"
                        filter="FilterType.Contains"
                        on-change="onEntityComboboxChange"
                        bind-to="@Model.ComboboxDataSources.AspNetUsers">
                    </kendo-combobox>
                </div>
            </div>

            <div class="form-group row">
                <label class="col-md-2" style="padding-top: 5px; font-weight: bold;">Is Admin: </label>
                <div class="col-md-10">
                    <kendo-checkbox name="IsAdmin" size=ComponentSize.Medium rounded=Rounded.Medium checked="@Model.UserDetail.IsAdmin" on-change="onCheckboxChange" />
                </div>
            </div>

            <div class="form-group row">
                <label class="col-md-2" style="padding-top: 5px; font-weight: bold;">Can Edit DTR Time: </label>
                <div class="col-md-10">
                    <kendo-checkbox name="CanEditDtrTime" size=ComponentSize.Medium rounded=Rounded.Medium checked="@Model.UserDetail.CanEditDtrTime" on-change="onCheckboxChange" />
                </div>
            </div>

            <div class="form-group row">
                <label class="col-md-2" style="padding-top: 5px; font-weight: bold;">Is Locked: </label>
                <div class="col-md-10">
                    <kendo-checkbox name="IsLocked" size=ComponentSize.Medium rounded=Rounded.Medium checked="@Model.UserDetail.IsLocked" on-change="onCheckboxChange" />
                </div>
            </div>

            <div class="form-group row">
                <label class="col-md-2" style="font-weight: bold;"><button class="btn btn-info" type="button" onclick="CopyUserForms()">Copy User Forms</button></label>
                <div class="col-md-10">
                    <kendo-combobox name="CopyUserId" style="width: 30%"
                                    placeholder="User"
                                    datatextfield="FullName"
                                    datavaluefield="Id"
                                    min-length="3"
                                    height="520"
                                    filter="FilterType.Contains"
                                    on-change="onEntityComboboxChange"
                                    bind-to="@Model.ComboboxDataSources.Users">
                    </kendo-combobox>
                </div>
            </div>
        </div>
    </div>

    @(Html.Kendo().Grid(Model.UserDetail.MstUserForms)
        .Name("MstUserForms")
        .Scrollable()
        .ToolBar(x =>
        {
            x.Custom().Text("Add Form").IconClass("k-icon k-i-plus").HtmlAttributes(new { onclick = "CmdAddForm(); return false;" });
            x.Custom().Text("Delete All Lines").IconClass("k-icon k-i-table-delete").HtmlAttributes(new { onclick = "CmdDeleteAllLines(); return false;" });
        })
        .Columns(columns =>
        {
            columns.Command(command => command.Custom("Delete").IconClass("k-icon k-i-x").Click("CmdDeleteForm"))
                .Width(110);
            columns.Bound(x => x.Id)
                .Filterable(false)
                .Hidden();
            columns.ForeignKey(column => column.FormId, x => x.Read(b => b.Url("/MstUser/Detail?handler=Forms")), "Id", "Remarks")
                .Title("Form Name")
                .HtmlAttributes(new { onchange = "onFormChange()" })
                .Filterable(false)
                .Width(500);
            columns.Bound(x => x.CanView)
                .Title("View")
                .ClientTemplate("<input type='checkbox' #= CanView ? checked='checked' : '' # />")
                .HtmlAttributes(new { onchange = "onViewFormChange()" })
                .Filterable(false)
                .Width(80);
            columns.Bound(x => x.CanEdit)
                .Title("Detail")
                .ClientTemplate("<input type='checkbox' #= CanEdit ? checked='checked' : '' # />")
                .HtmlAttributes(new { onchange = "onEditFormChange()" })
                .Filterable(false)
                .Width(80);
            columns.Bound(x => x.CanAdd)
                .Title("Add")
                .ClientTemplate("<input type='checkbox' #= CanAdd ? checked='checked' : '' # />")
                .HtmlAttributes(new { onchange = "onAddFormChange()" })
                .Filterable(false)
                .Width(80);
            columns.Bound(x => x.CanDelete)
                .Title("Delete")
                .ClientTemplate("<input type='checkbox' #= CanDelete ? checked='checked' : '' # />")
                .HtmlAttributes(new { onchange = "onDeleteFormChange()" })
                .Filterable(false)
                .Width(80);
            columns.Bound(x => x.CanLock)
                .Title("Save")
                .ClientTemplate("<input type='checkbox' #= CanLock ? checked='checked' : '' # />")
                .HtmlAttributes(new { onchange = "onLockFormChange()" })
                .Filterable(false)
                .Width(80);
            columns.Bound(x => x.CanPrint)
                .Title("Print")
                .ClientTemplate("<input type='checkbox' #= CanPrint ? checked='checked' : '' # />")
                .HtmlAttributes(new { onchange = "onPrintFormChange()" })
                .Filterable(false)
                .Width(80);
            columns.Template("").Title("");
            columns.Bound(x => x.FormName).Hidden();
            columns.Bound(x => x.CanUnlock).Hidden();
            columns.Bound(x => x.IsDeleted).Hidden();
        })
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Navigatable()
        .Selectable(x => x.Mode(GridSelectionMode.Single))
        .Pageable()
        .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(p => p.Id);
            model.Field(p => p.FormId);
            model.Field(p => p.CanAdd);
            model.Field(p => p.CanEdit);
            model.Field(p => p.CanDelete);
            model.Field(p => p.CanLock);
            model.Field(p => p.CanUnlock);
            model.Field(p => p.CanPrint);
            model.Field(p => p.IsDeleted);
        })
        .Sort(sort => sort.Add("FormName").Ascending())
        .ServerOperation(false)
        .PageSize(100)
        ))
</form>

<script>
    $("#frmDetail").keydown(function (e) {
        if (isFormDirty(e)) {
            $isDirty = true;
        }
    });
</script>
