@page
@model QuickEncodeModel
@{
    Layout = null;
}

<div class="row" style="margin: 5px">
    <div class="col-md-12">
        <div class="form-group row">
            <label class="col-md-3" style="padding-top: 5px; font-weight: bold;">Employee: </label>
            <div class="col-md-9">
                <kendo-combobox name="EncodeEmployeeId" style="width: 100%"
                                datatextfield="FullName"
                                datavaluefield="Id"
                                min-length="3"
                                height="520"
                                filter="FilterType.Contains"
                                on-change="onEntityComboboxChange"
                                bind-to="@Model.ComboboxDatasources.EmployeeCmbDs">

                </kendo-combobox>
            </div>
        </div>

        <div class="row" style="margin: 5px">
            @(Html.Kendo().Grid<TmpOtherIncome>()
                .Name("gridOtherIncome")
                .Columns(columns =>
                {
                    columns.Bound(x => x.IsSelected)
                    .Title("S")
                    .ClientTemplate("<input type='checkbox' #= IsSelected ? checked='checked' : '' # />")
                    .Filterable(false)
                    .Width(50);
                    columns.Bound(column => column.OtherIncome).Title("OtherIncome");
                    columns.Bound(column => column.Amount).Title("Amount").Width(170);
                    columns.Bound(column => column.Id).Visible(false).Title("Id");
                    
                })
                .Selectable(x => x.Mode(GridSelectionMode.Single))
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                .Scrollable()
                .DataSource(dataSource => dataSource
                .Ajax()
                .Model(model =>
                {
                    model.Id(p => p.Id);
                    model.Field(p => p.IsSelected).Editable(true);
                    model.Field(p => p.OtherIncome).Editable(false);
                    model.Field(p => p.Amount).Editable(true);
                })
                .ServerOperation(true)
                .PageSize(20)
                .Read(read => read.Url("/TrnPayrollOtherIncome/QuickEncode?handler=ReadOIList")
                .Data("forgeryToken2")))
                )
        </div>

        <div class="form-group row" style="margin-top: 20px; margin-bottom: 20px">
            <div class="text-center">
                <button id="btnSave"
                        class="btn btn-primary  cmd-buttons"
                        type="button"
                        onclick="CmdPayrollOtherIncomeQuickEncode()">
                    <span class="btn-label">
                        <i class="fa fa-gear"></i>
                    </span>
                    Process
                </button>
            </div>
        </div>
    </div>
</div>

