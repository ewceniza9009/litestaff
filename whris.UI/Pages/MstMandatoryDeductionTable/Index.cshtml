@page
@model IndexModel
@{
    ViewData["Title"] = "Mandatory Deduction Tables";
}
<style>
    #MstTableSsses {
        height: 70vh;
    }

    #MstTableHdmfs {
        height: 70vh;
    }

    #MstTablePhics {
        height: 70vh;
    }

     #MstTableWtaxSemiMonthlies {
        height: 70vh;
    }

    #MstTableWtaxMonthlies {
        height: 70vh;
    }

    #MstTableWtaxYearlies {
        height: 70vh;
    }

    #MstTaxCodes {
        height: 70vh;
    }

    .form-group {
        margin-top: 5px;
    }
</style>


@*<div class="row" style="width: 181vh">*@
<div class="row">
    <form id="frmDetail" method="post" style="margin-top: 10px">
        <div class="row" style="margin-bottom: 5px; margin-top: 5px">
            <div class="col-md-6">
                <h5 class="title-color"><i class="fa fa-landmark"></i> Mandatory Deduction Tables (Editable)</h5>
            </div>

            <div class="col-md-6" style="padding: 0px">
                <div class="float-end">
                    <div class="hstack gap-3 float end">
                        <button id="btnSave"
                                class="btn btn-primary"
                                type="button"
                                onclick="CmdSave()">
                            <span class="btn-label">
                                <i class="fa fa-lock"></i>
                            </span>
                            Save
                        </button>

                        <a class="btn btn-light cmd-buttons" asp-area="" asp-page="/Index">
                            <span class="btn-label">
                                <i class="fa fa-arrow-left"></i>
                            </span>Home
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <div class="row" hidden>
            <div class="form-group row">
                <label class="col-md-2" style="padding-top: 5px; font-weight: bold;">Id: </label>
                <div class="col-sm-10">
                    <kendo-textbox name="Id" placeholder="Id" value="@Model.DeductionTables.Id" readonly="true" style="width: 100px; background-color: lightgray;">
                    </kendo-textbox>
                </div>
            </div>
        </div>

        <div class="row">
            <kendo-tabstrip name="itemTabs" style="margin-top: 5px; width: 100%" on-select="tabStripOnSelect">
                <popup-animation>
                    <open effects="fade:in" />
                </popup-animation>
                <items>
                    <tabstrip-item text="SSS" selected="true">
                        <content>
                            @(
                                Html.Kendo().Grid(Model.DeductionTables.MstTableSsses)
                                .Name("MstTableSsses")
                                .ToolBar(toolbar => toolbar.Custom()
                                .Text("Add Sss")
                                .IconClass("k-icon k-i-plus")
                                .HtmlAttributes(new { onclick = "CmdAddSss(); return false;" }))
                                .Columns(columns =>
                                {
                                    columns.Command(command => command.Custom("Delete").Click("CmdDeleteSss").IconClass("k-icon k-i-x"))
                                    .Width(110);
                                    columns.Bound(column => column.Id).Hidden();
                                    columns.Bound(x => x.AmountStart)
                                    .Title("Start")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.AmountEnd)
                                    .Title("End")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployerContribution)
                                    .Title("ER")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployeeContribution)
                                    .Title("EE")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployerEc)
                                    .Title("ER-EC")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployeeEc)
                                    .Title("EE-EC")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployerWISP)
                                    .Title("ER-WISP")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployeeWISP)
                                    .Title("EE-WISP")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Template("").Title("");
                                    columns.Bound(column => column.IsDeleted).Hidden(true);
                                })
                                .Filterable()
                                .Selectable(x => x.Mode(GridSelectionMode.Single))
                                .Pageable()
                                .Sortable()
                                .Editable(editable => editable.Mode(GridEditMode.InCell))
                                .Scrollable()
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(100)
                                .ServerOperation(false))
                                )
                        </content>
                    </tabstrip-item>
                    <tabstrip-item text="HDMF">
                        <content>
                            @(
                                Html.Kendo().Grid(Model.DeductionTables.MstTableHdmfs)
                                .Name("MstTableHdmfs")
                                .ToolBar(toolbar => toolbar.Custom()
                                .Text("Add Hdmf")
                                .IconClass("k-icon k-i-plus")
                                .HtmlAttributes(new { onclick = "CmdAddHdmf(); return false;" }))
                                .Columns(columns =>
                                {
                                    columns.Command(command => command.Custom("Delete").Click("CmdDeleteHdmf").IconClass("k-icon k-i-x"))
                                    .Width(110);
                                    columns.Bound(column => column.Id).Hidden();
                                    columns.Bound(x => x.AmountStart)
                                    .Title("Start")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.AmountEnd)
                                    .Title("End")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployerPercentage)
                                    .Title("Employer %")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployeePercentage)
                                    .Title("Employee %")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployerValue)
                                    .Title("Employer Value")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployeeValue)
                                    .Title("Employee Value")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Template("").Title("");
                                    columns.Bound(column => column.IsDeleted).Hidden(true);
                                })
                                .Filterable()
                                .Pageable()
                                .Sortable()
                                .Editable(editable => editable.Mode(GridEditMode.InCell))
                                .Scrollable()
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(100)
                                .ServerOperation(false))
                                )
                        </content>
                    </tabstrip-item>
                    <tabstrip-item text="PHIC">
                        <content>
                            @(
                                Html.Kendo().Grid(Model.DeductionTables.MstTablePhics)
                                .Name("MstTablePhics")
                                .ToolBar(toolbar => toolbar.Custom()
                                .Text("Add Phic")
                                .IconClass("k-icon k-i-plus")
                                .HtmlAttributes(new { onclick = "CmdAddPhic(); return false;" }))
                                .Columns(columns =>
                                {
                                    columns.Command(command => command.Custom("Delete").Click("CmdDeletePhic").IconClass("k-icon k-i-x"))
                                    .Width(110);
                                    columns.Bound(column => column.Id).Hidden();
                                    columns.Bound(x => x.AmountStart)
                                    .Title("Start")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.AmountEnd)
                                    .Title("End")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.SalaryBracket)
                                    .Title("Salary Bracket")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployerContribution)
                                    .Title("Employer Cntrb")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.EmployeeContribution)
                                    .Title("Employee Cntrb")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Template("").Title("");
                                    columns.Bound(column => column.IsDeleted).Hidden(true);
                                })
                                .Filterable()
                                .Pageable()
                                .Sortable()
                                .Editable(editable => editable.Mode(GridEditMode.InCell))
                                .Scrollable()
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(100)
                                .ServerOperation(false))
                                )
                        </content>
                    </tabstrip-item>
                    <tabstrip-item text="Semi-Monthly Withholding Tax">
                        <content>
                            @(
                                Html.Kendo().Grid(Model.DeductionTables.MstTableWtaxSemiMonthlies)
                                .Name("MstTableWtaxSemiMonthlies")
                                .ToolBar(toolbar => toolbar.Custom()
                                .Text("Add Semi")
                                .IconClass("k-icon k-i-plus")
                                .HtmlAttributes(new { onclick = "CmdAddSemi(); return false;" }))
                                .Columns(columns =>
                                {
                                    columns.Command(command => command.Custom("Delete").Click("CmdDeleteSemi").IconClass("k-icon k-i-x"))
                                    .Width(110);
                                    columns.Bound(column => column.Id).Hidden();
                                    columns.Bound(x => x.TaxCodeId)
                                    .Title("TaxCode")
                                    .Filterable(false)
                                    .Width(300)
                                    .EditorTemplateName("FKForMandatoryMonthliesTaxCode")
                                    .ClientTemplate("#= GetTaxCodeText(data) #");
                                    columns.Bound(x => x.TaxCodeValue)
                                    .Title("Exemption")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.Amount)
                                    .Title("Amount")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.Tax)
                                    .Title("Tax")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.Percentage)
                                    .Title("Percentage")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Template("").Title("");
                                    columns.Bound(column => column.IsDeleted).Hidden(true);
                                })
                                .Filterable()
                                .Pageable()
                                .Sortable()
                                .Editable(editable => editable.Mode(GridEditMode.InCell))
                                .Scrollable()
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(100)
                                .ServerOperation(false))
                                )
                        </content>
                    </tabstrip-item>
                    <tabstrip-item text="Monthly Withholding Tax">
                        <content>
                            @(
                                Html.Kendo().Grid(Model.DeductionTables.MstTableWtaxMonthlies)
                                .Name("MstTableWtaxMonthlies")
                                .ToolBar(toolbar => toolbar.Custom()
                                .Text("Add Monthly")
                                .IconClass("k-icon k-i-plus")
                                .HtmlAttributes(new { onclick = "CmdAddMonthly(); return false;" }))
                                .Columns(columns =>
                                {
                                    columns.Command(command => command.Custom("Delete").Click("CmdDeleteMonthly").IconClass("k-icon k-i-x"))
                                    .Width(110);
                                    columns.Bound(column => column.Id).Hidden();
                                    columns.Bound(x => x.TaxCodeId)
                                    .Title("TaxCode")
                                    .Filterable(false)
                                    .Width(300)
                                    .EditorTemplateName("FKForMandatoryMonthliesTaxCode")
                                    .ClientTemplate("#= GetTaxCodeText(data) #");
                                    columns.Bound(x => x.TaxCodeValue)
                                    .Title("Exemption")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.Amount)
                                    .Title("Amount")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.Tax)
                                    .Title("Tax")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.Percentage)
                                    .Title("Percentage")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Template("").Title("");
                                    columns.Bound(column => column.IsDeleted).Hidden(true);
                                })
                                .Filterable()
                                .Pageable()
                                .Sortable()
                                .Editable(editable => editable.Mode(GridEditMode.InCell))
                                .Scrollable()
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(100)
                                .ServerOperation(false))
                                )
                        </content>
                    </tabstrip-item>
                    <tabstrip-item text="Yearly Withholding Tax">
                        <content>
                            @(
                                Html.Kendo().Grid(Model.DeductionTables.MstTableWtaxYearlies)
                                .Name("MstTableWtaxYearlies")
                                .ToolBar(toolbar => toolbar.Custom()
                                .Text("Add Monthly")
                                .IconClass("k-icon k-i-plus")
                                .HtmlAttributes(new { onclick = "CmdAddYearly(); return false;" }))
                                .Columns(columns =>
                                {
                                    columns.Command(command => command.Custom("Delete").Click("CmdDeleteYearly").IconClass("k-icon k-i-x"))
                                    .Width(110);
                                    columns.Bound(column => column.Id).Hidden();
                                    columns.Bound(x => x.AmountStart)
                                    .Title("Start")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.AmountEnd)
                                    .Title("End")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.Percentage)
                                    .Title("Percentage")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.AdditionalAmount)
                                    .Title("Additional Amount")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Template("").Title("");
                                    columns.Bound(column => column.IsDeleted).Hidden(true);
                                })
                                .Filterable()
                                .Pageable()
                                .Sortable()
                                .Editable(editable => editable.Mode(GridEditMode.InCell))
                                .Scrollable()
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(100)
                                .ServerOperation(false))
                                )
                        </content>
                    </tabstrip-item>
                    <tabstrip-item text="Tax Code">
                        <content>
                            @(
                                Html.Kendo().Grid(Model.DeductionTables.MstTaxCodes)
                                .Name("MstTaxCodes")
                                .ToolBar(toolbar => toolbar.Custom()
                                .Text("Add Tax Code")
                                .IconClass("k-icon k-i-plus")
                                .HtmlAttributes(new { onclick = "CmdAddTaxCode(); return false;" }))
                                .Columns(columns =>
                                {
                                    columns.Command(command => command.Custom("Delete").Click("CmdDeleteTaxCode").IconClass("k-icon k-i-x"))
                                    .Width(110);
                                    columns.Bound(column => column.Id).Hidden();
                                    columns.Bound(x => x.TaxCode)
                                    .Title("Tax Code")
                                    .Filterable(false)
                                    .Width(200);
                                    columns.Bound(x => x.ExemptionAmount)
                                    .Title("Exemption")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Bound(x => x.DependentAmount)
                                    .Title("Dependent")
                                    .Filterable(false)
                                    .Width(150)
                                    .HtmlAttributes(new { @style = "text-align: end;" });
                                    columns.Template("").Title("");
                                    columns.Bound(column => column.IsDeleted).Hidden(true);
                                })
                                .Filterable()
                                .Pageable()
                                .Sortable()
                                .Editable(editable => editable.Mode(GridEditMode.InCell))
                                .Scrollable()
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(100)
                                .ServerOperation(false))
                                )
                        </content>
                    </tabstrip-item>
                </items>
            </kendo-tabstrip>
        </div>
    </form>
</div>
<script>
    $taxCodes = null;

    function GetTaxCodeText(data) {
        var result = "";

        if($taxCodes == null)
        {
            $.ajax({
                url: "/MstMandatoryDeductionTable/Index?handler=TaxCodes",
                type: "GET",
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                async: false,
                success: function (data) {
                    $taxCodes = data;
                }
            });
        }

        for (let ctr = 0; ctr < $taxCodes.length; ctr++) {
            if ($taxCodes[ctr].Id == data.TaxCodeId) {
                result = $taxCodes[ctr].TaxCode;

                break;
            }
        }

        return result;
    }
</script>

<script>
    $("#frmDetail").keydown(function (e) {
        if (isFormDirty(e)) {
            $isDirty = true;
        }
    });
</script>

@section Scripts {
    <script src="~/Pages/MstMandatoryDeductionTable/Index.cshtml.js"></script>
}
